<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->
	
	<mvc:annotation-driven />
	
	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.doyd" />

	<!-- 定义文件上传的解析器 ，当提交的参数是file类型，这个解析器会自动拦截进行参数的处理-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<!-- 拦截器配置 -->

		<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/edit/**/*" />
			<bean class="com.doyd.interceptor.LoginInterceptor">
				<property name="sysUserService" ref="sysUserService"/>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/lt/**/*"/>
			<bean class="com.doyd.interceptor.VisitInterceptor">
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<mvc:default-servlet-handler />
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView">
		</property>
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
</beans>